{"version":3,"sources":["dev-server-compiled.js"],"names":[],"mappings":"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","file":"dev-server-compiled-compiled.js","sourcesContent":["import _Promise from 'babel-runtime/core-js/promise';\nimport _Object$keys from 'babel-runtime/core-js/object/keys';\nrequire('./check-versions')();\n\nvar config = require('../config');\nif (!process.env.NODE_ENV) {\n    process.env.NODE_ENV = JSON.parse(config.dev.env.NODE_ENV);\n}\n\nvar opn = require('opn');\nvar path = require('path');\nvar express = require('express');\nvar webpack = require('webpack');\nvar proxyMiddleware = require('http-proxy-middleware');\n// 开发环境的配置\nvar webpackConfig = require('./webpack.dev.conf');\n\n// default port where dev server listens for incoming traffic\nvar port = process.env.PORT || config.dev.port;\n// automatically open browser, if not set will be false\nvar autoOpenBrowser = !!config.dev.autoOpenBrowser;\n// Define HTTP proxies to your custom API backend\n// https://github.com/chimurai/http-proxy-middleware\nvar proxyTable = config.dev.proxyTable;\n\nvar app = express();\n\nvar appDate = require('../data.json');\nvar seller = appDate.seller;\nvar goods = appDate.goods;\nvar ratings = appDate.ratings;\n\nvar apiRoutes = express.Router();\n\napiRoutes.get('/seller', function (req, res) {\n    res.json({\n        errno: 0,\n        data: seller\n    });\n});\n\napiRoutes.get('/goods', function (req, res) {\n    res.json({\n        errno: 0,\n        data: goods\n    });\n});\n\napiRoutes.get('/ratings', function (req, res) {\n    res.json({\n        errno: 0,\n        data: ratings\n    });\n});\n\napp.use('/api', apiRoutes);\n\nvar compiler = webpack(webpackConfig);\n\nvar devMiddleware = require('webpack-dev-middleware')(compiler, {\n    publicPath: webpackConfig.output.publicPath,\n    quiet: true\n});\n\nvar hotMiddleware = require('webpack-hot-middleware')(compiler, {\n    log: function log() {}\n});\n// force page reload when html-webpack-plugin template changes\ncompiler.plugin('compilation', function (compilation) {\n    compilation.plugin('html-webpack-plugin-after-emit', function (data, cb) {\n        hotMiddleware.publish({ action: 'reload' });\n        cb();\n    });\n});\n\n// proxy api requests\n_Object$keys(proxyTable).forEach(function (context) {\n    var options = proxyTable[context];\n    if (typeof options === 'string') {\n        options = { target: options };\n    }\n    app.use(proxyMiddleware(options.filter || context, options));\n});\n\n// handle fallback for HTML5 history API\napp.use(require('connect-history-api-fallback')());\n\n// serve webpack bundle output\napp.use(devMiddleware);\n\n// enable hot-reload and state-preserving\n// compilation error display\napp.use(hotMiddleware);\n\n// serve pure static assets\nvar staticPath = path.posix.join(config.dev.assetsPublicPath, config.dev.assetsSubDirectory);\napp.use(staticPath, express.static('./static'));\n\nvar uri = 'http://localhost:' + port;\n\nvar _resolve;\nvar readyPromise = new _Promise(function (resolve) {\n    _resolve = resolve;\n});\n\nconsole.log('> Starting dev server...');\ndevMiddleware.waitUntilValid(function () {\n    console.log('> Listening at ' + uri + '\\n');\n    // when env is testing, don't need open it\n    if (autoOpenBrowser && process.env.NODE_ENV !== 'testing') {\n        opn(uri);\n    }\n    _resolve();\n});\n\nvar server = app.listen(port);\n\nmodule.exports = {\n    ready: readyPromise,\n    close: function close() {\n        server.close();\n    }\n};\n\n//# sourceMappingURL=dev-server-compiled.js.map"]}