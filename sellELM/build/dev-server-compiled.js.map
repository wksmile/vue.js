{"version":3,"sources":["dev-server.js"],"names":[],"mappings":"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","file":"dev-server-compiled.js","sourcesContent":["require('./check-versions')()\r\n\r\nvar config = require('../config')\r\nif (!process.env.NODE_ENV) {\r\n    process.env.NODE_ENV = JSON.parse(config.dev.env.NODE_ENV)\r\n}\r\n\r\nvar opn = require('opn')\r\nvar path = require('path')\r\nvar express = require('express')\r\nvar webpack = require('webpack')\r\nvar proxyMiddleware = require('http-proxy-middleware')\r\n    // 开发环境的配置\r\nvar webpackConfig = require('./webpack.dev.conf')\r\n\r\n// default port where dev server listens for incoming traffic\r\nvar port = process.env.PORT || config.dev.port\r\n    // automatically open browser, if not set will be false\r\nvar autoOpenBrowser = !!config.dev.autoOpenBrowser\r\n    // Define HTTP proxies to your custom API backend\r\n    // https://github.com/chimurai/http-proxy-middleware\r\nvar proxyTable = config.dev.proxyTable\r\n\r\nvar app = express()\r\n\r\nvar appDate = require('../data.json');\r\nvar seller = appDate.seller;\r\nvar goods = appDate.goods;\r\nvar ratings = appDate.ratings;\r\n\r\nvar apiRoutes = express.Router();\r\n\r\napiRoutes.get('/seller',function(req,res){\r\n    res.json({\r\n        errno: 0,\r\n        data: seller\r\n    })\r\n});\r\n\r\napiRoutes.get('/goods',function(req,res){\r\n    res.json({\r\n        errno:0,\r\n        data: goods\r\n    })\r\n});\r\n\r\napiRoutes.get('/ratings',function(req,res){\r\n    res.json({\r\n        errno: 0,\r\n        data: ratings\r\n    })\r\n});\r\n\r\napp.use('/api',apiRoutes);\r\n\r\nvar compiler = webpack(webpackConfig)\r\n\r\nvar devMiddleware = require('webpack-dev-middleware')(compiler, {\r\n    publicPath: webpackConfig.output.publicPath,\r\n    quiet: true\r\n})\r\n\r\nvar hotMiddleware = require('webpack-hot-middleware')(compiler, {\r\n        log: () => {}\r\n    })\r\n    // force page reload when html-webpack-plugin template changes\r\ncompiler.plugin('compilation', function(compilation) {\r\n    compilation.plugin('html-webpack-plugin-after-emit', function(data, cb) {\r\n        hotMiddleware.publish({ action: 'reload' })\r\n        cb()\r\n    })\r\n})\r\n\r\n// proxy api requests\r\nObject.keys(proxyTable).forEach(function(context) {\r\n    var options = proxyTable[context]\r\n    if (typeof options === 'string') {\r\n        options = { target: options }\r\n    }\r\n    app.use(proxyMiddleware(options.filter || context, options))\r\n})\r\n\r\n// handle fallback for HTML5 history API\r\napp.use(require('connect-history-api-fallback')())\r\n\r\n// serve webpack bundle output\r\napp.use(devMiddleware)\r\n\r\n// enable hot-reload and state-preserving\r\n// compilation error display\r\napp.use(hotMiddleware)\r\n\r\n// serve pure static assets\r\nvar staticPath = path.posix.join(config.dev.assetsPublicPath, config.dev.assetsSubDirectory)\r\napp.use(staticPath, express.static('./static'))\r\n\r\nvar uri = 'http://localhost:' + port\r\n\r\nvar _resolve\r\nvar readyPromise = new Promise(resolve => {\r\n    _resolve = resolve\r\n})\r\n\r\nconsole.log('> Starting dev server...')\r\ndevMiddleware.waitUntilValid(() => {\r\n    console.log('> Listening at ' + uri + '\\n')\r\n        // when env is testing, don't need open it\r\n    if (autoOpenBrowser && process.env.NODE_ENV !== 'testing') {\r\n        opn(uri)\r\n    }\r\n    _resolve()\r\n})\r\n\r\nvar server = app.listen(port)\r\n\r\nmodule.exports = {\r\n    ready: readyPromise,\r\n    close: () => {\r\n        server.close()\r\n    }\r\n}"]}